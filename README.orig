Implementation of Pitman-Yor Simple Range Concatenating Adaptor Grammars
Jan Botha, April 2013

See accompanying paper, and please cite it if used:
  Adaptor Grammars for Learning Nonâˆ’Concatenative Morphology. Jan A. Botha and Phil Blunsom.
  In Proceedings of the 2013 Conference on Empirical Methods in Natural Language Processing. October, 2013. Association for Computational Linguistics.
  http://aclweb.org/anthology//D/D13/D13-1034.pdf

This code release is somewhat temporary -- usage instructions have not been
updated fully.

Based on code by Mark Johnson.
  Main changes have been in the parser to support the SRCG formalism.
  The bulk of the sampling code is as before.

Pitman-Yor Context-Free Grammars
================================

Rules are of format

[w [a [b]]] X --> Y1 ... Yn

where X is a nonterminal and Y1 ... Yn are either terminals or
nonterminals,

w is the Dirichlet hyper-parameter (i.e., pseudo-count) associated
with this rule (a positive real)

a is the PY "a" constant associated with X (a positive real less
than 1)

b is the PY "b" constant associated with X (a positive real)


The -h flag causes the program to print out a list of options.

The -A parses-file causes it to print out analyses of the training data
for the last few iterations (the number of iterations is specified by the
-N flag).

If you specify the -C flag, these trees are printed in "compact" format,
i.e., only cached categories are printed (I think the root node is always
printed, just so we have a tree).

If you don't specify the -C flag, cached nodes are suffixed by a 
'#' followed by a number, which is the number of customers at this
table.


Brief recap of Pitman-Yor processes
===================================

Suppose there are n samples occupying m tables.  Then the probability
that the n+1 sample occupies table 1 <= k <= m is:

  P(x_{n+1} = k) = (n_k - a)/(n + b)

and the probability that the n+1 sample occupies the new table m+1 is:

  P(x_{n+1} = m+1) = (m*a + b)/(n + b)

The probability of a configuration in which a restaurant contains n
customers at m tables, with n_k customers at table k is:


  a^{-m} G(m+b/a)  G(b)                 G(n_k-a)
         -------- ------  \prod_{k=1}^m --------
          G(b/a)  G(n+b)                 G(1-a)

where G is the Gamma function.
